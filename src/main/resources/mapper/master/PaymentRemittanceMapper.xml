<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.mapper.master.PaymentRemittanceMapper">
    <resultMap id="BaseResultMap" type="com.project.entity.PaymentRemittance">
        <id column="id_payment_remittance" property="idPaymentRemittance" jdbcType="INTEGER"/>
        <result column="id_payment_form" property="idPaymentForm" jdbcType="INTEGER"/>
        <result column="id_card_type" property="idCardType" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="service_charge" property="serviceCharge" jdbcType="DECIMAL"/>
        <result column="remittance_date" property="remittanceDate" jdbcType="TIMESTAMP"/>
        <result column="id_user" property="idUser" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
       id_payment_remittance, id_payment_form, id_card_type, amount, service_charge, remittance_date, remark, id_user, create_time
	</sql>
    <select id="selectRemittanceByIdPamentForm" resultType="java.lang.Integer">
        SELECT count(1) FROM `payment_remittance` WHERE id_payment_form = #{idPaymentForm,jdbcType=INTEGER}
    </select>
    <select id="selectPaymentRemittanceByDepartment" resultType="com.project.entity.PaymentRemittance">
        SELECT
         d.`id_department` AS 'idDepartment',
         d.`department_name` AS 'departmentName',
        SUM(pr.`amount`) AS 'amount',
        SUM(pr.`service_charge`) AS 'serviceCharge'
         FROM payment_remittance pr
         LEFT JOIN  payment_form pf ON pf.`id_payment_form` = pr.`id_payment_form`
        LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pf.`id_payment_form`
        LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
        LEFT JOIN department d ON d.`id_department` = u.`id_department`
        WHERE pf.`id_card_type` = #{idCardType,jdbcType=INTEGER}
        <if test="year != null">
            AND YEAR(pr.`remittance_date`) = #{year}
        </if>
        GROUP BY u.`id_department`
    </select>
    <select id="selectRemittanceTotalByYear" resultType="com.project.entity.PaymentRemittance">
        SELECT
          SUM(pr.amount) as 'amount',
          SUM(pr.service_charge) as 'serviceCharge'
        FROM `payment_remittance` pr
        LEFT JOIN payment_form pf ON pf.`id_payment_form` = pr.`id_payment_form`
        WHERE pr.id_card_type = #{idCardType,jdbcType=INTEGER}
        <if test="year != null">
            AND YEAR(pr.remittance_date) = #{year}
        </if>
    </select>
    <update id="updateSelective" parameterType="com.project.entity.PaymentRemittance">
        UPDATE `payment_remittance`
        <set>
            <if test="idCardType != null">
                id_card_type = #{idCardType},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="serviceCharge != null">
                server_charge = #{serviceCharge},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark}
            </if>
        </set>
        WHERE id_payment_remittance = #{idPaymentRemittance,jdbcType=INTEGER}
    </update>
    <insert id="addSelective" parameterType="com.project.entity.PaymentRemittance"
            useGeneratedKeys="true" keyProperty="idPaymentRemittance">
        insert into payment_remittance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idPaymentRemittance != null">
                id_payment_remittance,
            </if>
            <if test="idPaymentForm != null">
                id_payment_form,
            </if>
            <if test="idCardType != null">
                id_card_type,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="serviceCharge != null">
                service_charge,
            </if>
            <if test="remittanceDate != null and remittanceDate != ''">
                remittance_date,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="idUser != null">
                id_user,
            </if>
            <if test="createTime != null and createTime != ''">
                create_time
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idPaymentRemittance != null">
                #{idPaymentRemittance,jdbcType=INTEGER},
            </if>
            <if test="idPaymentForm != null">
                #{idPaymentForm,jdbcType=INTEGER},
            </if>
            <if test="idCardType != null">
                #{idCardType,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="serviceCharge != null">
                #{serviceCharge,jdbcType=DECIMAL},
            </if>
            <if test="remittanceDate != null and remittanceDate != ''">
                #{remittanceDate,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != ''">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="idUser != null">
                #{idUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null and createTime != ''">
                #{createTime,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>
</mapper>