<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.mapper.master.PaymentFormMapper">
    <resultMap id="BaseResultMap" type="com.project.entity.PaymentForm">
        <id column="id_payment_form" property="idPaymentForm" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="reason_application" property="reasonApplication" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="payment_name" property="paymentName" jdbcType="VARCHAR"/>
        <result column="payment_account" property="paymentAccount" jdbcType="VARCHAR"/>
        <result column="id_user" property="idUser" jdbcType="INTEGER"/>
        <result column="id_payment_form_state" property="idPaymentFormState" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="id_card_type" property="idCardType" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="BOOLEAN"/>
    </resultMap>
    <sql id="Base_Column_List">
       id_payment_form, `code`, id_card_type, reason_application, amount, payment_name, payment_account, id_user,
       id_payment_form_state, state, create_time
	</sql>
    <select id="selectCollectionByIdCardType" resultType="com.project.entity.PaymentForm">
        SELECT
         cr.`amount` AS 'collectionAmount',
         cr.`id_card_type` AS 'idCardType',
         ifr.`remaining_sum` AS 'remainingSum',
         ifr.`id_flow_type` AS 'idFlowType',
         ifr.`id_income_flow_record` AS 'idIncomeFlowRecord',
         cr.`create_time` AS 'createTime'
         FROM income_flow_record ifr
        LEFT JOIN collection_record cr ON cr.`id_collection_record` = ifr.`id_collection_record`
        WHERE cr.`id_card_type` = #{idCardType,jdbcType=INTEGER}
        AND DATE_FORMAT(cr.`create_time`, '%Y-%m-%d') = #{date,jdbcType=VARCHAR}
        order by cr.create_time desc
    </select>
    <select id="selectPaymentByIdCardType" resultType="com.project.entity.PaymentForm">
        SELECT
         pf.`reason_application` AS 'reasonApplication',
         pf.`amount`,
         pf.`payment_name` AS 'paymentName',
         pf.`payment_account` AS 'paymentAccount',
         pf.`code`,
         pf.`id_card_type` AS 'idCardType',
         pa.`amount` AS 'approvalAmount',
         pr.`amount` AS 'remittanceAmount',
         pr.`service_charge` AS 'serviceCharge',
         pfr.`remaining_sum` AS 'remainingSum',
         pfr.`id_flow_type` AS 'idFlowType',
         pfr.`id_pay_flow_record` AS 'idPayFlowRecord',
         pr.`create_time` AS 'createTime'
         FROM pay_flow_record pfr
        LEFT JOIN payment_remittance pr ON pr.`id_payment_remittance` = pfr.`id_payment_remittance`
        LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pr.`id_payment_form`
        LEFT JOIN payment_form pf ON pf.`id_payment_form` = pa.`id_payment_form`
        WHERE pf.`id_card_type` = #{idCardType,jdbcType=INTEGER}
        AND DATE_FORMAT(pr.`create_time`, '%Y-%m-%d') = #{date,jdbcType=VARCHAR}
        order by pr.create_time desc
    </select>
    <select id="queryLastDayCollectionRecord" resultType="com.project.entity.PaymentForm">
         SELECT
         amount as 'collectionAmount',
         collection_date as 'collectionDate'
         FROM `collection_record`
         WHERE id_card_type = #{idCardType,jdbcType=INTEGER}
         AND  DATE_FORMAT(NOW(), '%Y%m%d') - DATE_FORMAT(collection_date, '%Y%m%d') = 1
    </select>
    <select id="queryLastDayFlowRecord" resultType="com.project.entity.PaymentForm">
        SELECT
         pf.`code`,
         pf.`reason_application` AS 'reasonApplication',
         pf.`amount`,
         pf.`payment_name` AS 'paymentName',
         pf.`payment_account` AS 'paymentAccount',

         pa.`amount` AS 'approvalAmount',
         pa.`create_time` AS 'approvalCreateTime',

         pr.`amount` AS 'remittanceAmount',
         pr.`service_charge` AS 'serviceCharge',
         pr.`remittance_date` AS 'remittanceDate'
         FROM payment_form pf
        LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pf.`id_payment_form`
        LEFT JOIN payment_remittance pr ON pr.`id_payment_form` = pf.`id_payment_form`
        WHERE pf.`id_card_type` = #{idCardType,jdbcType=INTEGER}
        AND DATE_FORMAT(NOW(), '%Y%m%d') - DATE_FORMAT(pr.`remittance_date`, '%Y%m%d') = 1
    </select>
    <select id="queryIncomeFlowRecordDetailTotal" resultType="java.lang.Integer">
        SELECT count(1)
        FROM income_flow_record ifr
        LEFT JOIN collection_record cr ON cr.`id_collection_record` = ifr.`id_collection_record`
        WHERE 1=1
        <if test="startTime != null and endTime != null and startTime != '' and endTime != ''">
            AND DATE_FORMAT(cr.`create_time`, '%Y-%m-%d') between #{startTime} and #{endTime}
        </if>
    </select>
    <select id="queryIncomeFlowRecordDetail" resultType="com.project.entity.PaymentForm">
        SELECT
         cr.`amount` as 'collectionAmount',
         cr.`id_card_type` as 'idCardType',
         ifr.`remaining_sum` AS 'remainingSum',
         ifr.`id_flow_type` AS 'idFlowType',
         ifr.`id_income_flow_record` AS 'idIncomeFlowRecord',
         cr.`create_time` AS 'createTime'
         FROM income_flow_record ifr
        LEFT JOIN collection_record cr ON cr.`id_collection_record` = ifr.`id_collection_record`
        WHERE 1=1
        <if test="startTime != null and endTime != null and startTime != '' and endTime != ''">
            AND DATE_FORMAT(cr.`create_time`, '%Y-%m-%d') between #{startTime} and #{endTime}
        </if>
        <if test="pageSize > 0">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>
    <select id="queryPayFlowRecordDetailTotal" resultType="java.lang.Integer">
        SELECT count(1)
        FROM pay_flow_record pfr
        LEFT JOIN payment_remittance pr ON pr.`id_payment_remittance` = pfr.`id_payment_remittance`
        LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pr.`id_payment_form`
        LEFT JOIN payment_form pf ON pf.`id_payment_form` = pa.`id_payment_form`
        WHERE 1=1
        <if test="startTime != null and endTime != null and startTime != '' and endTime != ''">
            AND DATE_FORMAT(pr.`create_time`, '%Y-%m-%d') between #{startTime} and #{endTime}
        </if>
    </select>
    <select id="queryPayFlowRecordDetail" resultType="com.project.entity.PaymentForm">
        SELECT
         pf.`reason_application` AS 'reasonApplication',
         pf.`amount`,
         pf.`payment_name` AS 'paymentName',
         pf.`payment_account` AS 'paymentAccount',
         pf.`code`,
         pf.`id_card_type` as 'idCardType',
         pa.`amount` AS 'approvalAmount',
         pr.`amount` AS 'remittanceAmount',
         pr.`service_charge` AS 'serviceCharge',
         pfr.`remaining_sum` AS 'remainingSum',
         pfr.`id_flow_type` AS 'idFlowType',
         pfr.`id_pay_flow_record` AS 'idPayFlowRecord',
         pr.`create_time` AS 'createTime'
         FROM pay_flow_record pfr
        LEFT JOIN payment_remittance pr ON pr.`id_payment_remittance` = pfr.`id_payment_remittance`
        LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pr.`id_payment_form`
        LEFT JOIN payment_form pf ON pf.`id_payment_form` = pa.`id_payment_form`
        WHERE 1=1
        <if test="startTime != null and endTime != null and startTime != '' and endTime != ''">
            AND DATE_FORMAT(pr.`create_time`, '%Y-%m-%d') between #{startTime} and #{endTime}
        </if>
        <if test="pageSize > 0">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>
    <select id="queryPaymentRemittanceCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM payment_form WHERE id_payment_form NOT IN (
            SELECT id_payment_form FROM payment_remittance
        )
    </select>
    <select id="queryApprovalPaymentCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM payment_form WHERE id_payment_form_state = 1
    </select>
    <select id="queryPaymentFormTotal" resultType="java.lang.Integer">
        SELECT count(1)
        FROM payment_form pf
        LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pf.`id_payment_form`
        LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
        LEFT JOIN `user` ua ON ua.`id_user` = pa.`id_user`
        WHERE 1=1
        <if test="paymentForm != null">
            <if test="paymentForm.code != null and paymentForm.code != ''">
                AND pf.`code` LIKE CONCAT('%',#{paymentForm.code,jdbcType=VARCHAR},'%')
            </if>
            <if test="paymentForm.idCardType != null">
                and pf.id_card_type = #{paymentForm.idCardType,jdbcType=INTEGER}
            </if>
        </if>
    </select>
    <select id="queryAllPaymentForm" resultType="com.project.entity.PaymentForm">
         SELECT
         pf.`id_payment_form` AS 'idPaymentForm',
         pf.`code`,
         pf.`reason_application` AS 'reasonApplication',
         pf.`amount`,
         pf.`payment_name` AS 'paymentName',
         pf.`payment_account` AS 'paymentAccount',
         pf.`id_payment_form_state` AS 'idPaymentFormState',
         pf.`create_time` AS 'createTime',
         pf.`id_user` AS 'idUser',
         pf.`id_card_type` as 'idCardType',
         pf.`state`,
         pa.`amount` AS 'approvalAmount',
         ua.`real_name` AS 'approvalUser',
         pr.`amount` AS 'remittanceAmount',
         pr.`service_charge` AS 'serviceCharge',
         ur.`real_name` AS 'remittanceUser',
         u.`real_name` AS 'userName'
         FROM payment_form pf
         LEFT JOIN payment_approval pa ON pa.`id_payment_form` = pf.`id_payment_form`
         LEFT JOIN payment_remittance pr ON pr.`id_payment_form` = pf.`id_payment_form`
         LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
         LEFT JOIN `user` ua ON ua.`id_user` = pa.`id_user`
         LEFT JOIN `user` ur ON ur.`id_user` = pr.`id_user`
         WHERE 1=1
        <if test="paymentForm != null">
            <if test="paymentForm.code != null and paymentForm.code != ''">
                AND pf.`code` LIKE CONCAT('%',#{paymentForm.code,jdbcType=VARCHAR},'%')
            </if>
            <if test="paymentForm.idCardType != null">
                and pf.id_card_type = #{paymentForm.idCardType,jdbcType=INTEGER}
            </if>
        </if>
        ORDER BY pf.`create_time` DESC
        <if test="pageSize > 0">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>
    <select id="selectApprovalPaymentFormTotal" resultType="java.lang.Integer">
        SELECT count(1)
        FROM payment_form pf
        LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
        WHERE 1=1
        <if test="paymentForm != null">
            <if test="paymentForm.code != null and paymentForm.code != ''">
                AND pf.`code` LIKE CONCAT('%',#{paymentForm.code,jdbcType=VARCHAR},'%')
            </if>
            <if test="paymentForm.idPaymentFormState != null">
                and pf.`id_payment_form_state` = #{paymentForm.idPaymentFormState,jdbcType=INTEGER}
            </if>
        </if>
    </select>
    <select id="selectApprovalPaymentFormByPage" resultType="com.project.entity.PaymentForm">
        SELECT
        pf.`id_payment_form` AS 'idPaymentForm',
        pf.`code`,
        pf.`reason_application` AS 'reasonApplication',
        pf.`amount`,
        pf.`payment_name` AS 'paymentName',
        pf.`payment_account` AS 'paymentAccount',
        pf.`id_payment_form_state` as 'idPaymentFormState',
        pf.`create_time` AS 'createTime',
        pf.`id_user` AS 'idUser',

        u.`real_name` AS 'userName'
        FROM payment_form pf
        LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
        WHERE 1=1
        <if test="paymentForm != null">
            <if test="paymentForm.code != null and paymentForm.code != ''">
                AND pf.`code` LIKE CONCAT('%',#{paymentForm.code,jdbcType=VARCHAR},'%')
            </if>
            <if test="paymentForm.idPaymentFormState != null">
                and pf.`id_payment_form_state` = #{paymentForm.idPaymentFormState,jdbcType=INTEGER}
            </if>
        </if>
        ORDER BY pf.`create_time` DESC
        <if test="pageSize > 0">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>
    <select id="queryMaxCode" resultType="java.lang.String">
        SELECT MAX(`code`) FROM payment_form
        WHERE DATE_FORMAT(create_time, '%y-%m-%d') = DATE_FORMAT(#{date}, '%y-%m-%d')
    </select>
    <insert id="addSelective" parameterType="com.project.entity.PaymentForm"
            useGeneratedKeys="true" keyProperty="idPaymentForm">
        insert into payment_form
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="idPaymentForm != null">
              id_payment_form,
          </if>
          <if test="code != null and code != ''">
              `code`,
          </if>
          <if test="idCardType != null">
              id_card_type,
          </if>
          <if test="reasonApplication != null and reasonApplication != ''">
              reason_application,
          </if>
          <if test="amount != null">
              amount,
          </if>
          <if test="paymentName != null and paymentName != ''">
              payment_name,
          </if>
          <if test="paymentAccount != null and paymentAccount != ''">
              payment_account,
          </if>
          <if test="idUser != null">
              id_user,
          </if>
          <if test="createTime != null and createTime != ''">
              create_time
          </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idPaymentForm != null">
                #{idPaymentForm,jdbcType=INTEGER},
            </if>
            <if test="code != null and code != ''">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="idCardType != null">
                #{idCardType,jdbcType=INTEGER},
            </if>
            <if test="reasonApplication != null and reasonApplication != ''">
                #{reasonApplication,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="paymentName != null and paymentName != ''">
                #{paymentName,jdbcType=VARCHAR},
            </if>
            <if test="paymentAccount != null and paymentAccount != ''">
                #{paymentAccount,jdbcType=VARCHAR},
            </if>
            <if test="idUser != null">
                #{idUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null and createTime != ''">
                #{createTime,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>
    <update id="updateSelective" parameterType="com.project.entity.PaymentForm">
        update payment_form
        <set>
            <if test="idCardType != null">
                id_card_type = #{idCardType,jdbcType=INTEGER},
            </if>
            <if test="reasonApplication != null and reasonApplication != ''">
                `reason_application` = #{reasonApplication,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="paymentName != null and paymentName != ''">
                payment_name = #{paymentName,jdbcType=VARCHAR},
            </if>
            <if test="paymentAccount != null and paymentAccount != ''">
                payment_account = #{paymentAccount,jdbcType=VARCHAR},
            </if>
            <if test="idPaymentFormState != null">
                id_payment_form_state = #{idPaymentFormState, jdbcType=INTEGER},
            </if>
            <if test="state != null">
                `state` = #{state}
            </if>
        </set>
        where id_payment_form = #{idPaymentForm,jdbcType=INTEGER}
    </update>
    <delete id="deleteSelective" parameterType="java.lang.Integer">
        delete from payment_form where id_payment_form = #{idPaymentForm,jdbcType=INTEGER}
    </delete>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from payment_form where id_payment_form = #{idPaymentForm,jdbcType=INTEGER}
    </select>
    <select id="selectByPageTotal" resultType="java.lang.Integer">
        SELECT count(1)
        FROM payment_form pf
        LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
        WHERE pf.id_user = #{idUser,jdbcType=INTEGER}
        <if test="paymentForm != null">
            <if test="paymentForm.code != null and paymentForm.code != ''">
                AND pf.`code` LIKE CONCAT('%',#{paymentForm.code,jdbcType=VARCHAR},'%')
            </if>
        </if>
    </select>
    <select id="selectByPage" resultType="com.project.entity.PaymentForm">
         SELECT
         pf.`id_payment_form` AS 'idPaymentForm',
         pf.`code`,
         pf.`id_card_type` as 'idCardType',
         pf.`reason_application` AS 'reasonApplication',
         pf.`amount`,
         pf.`payment_name` AS 'paymentName',
         pf.`payment_account` AS 'paymentAccount',
         pf.`id_payment_form_state` as 'idPaymentFormState',
         pf.`create_time` AS 'createTime',
         pf.`id_user` AS 'idUser',
         pf.`state`,

         u.`real_name` AS 'userName'
        FROM payment_form pf
        LEFT JOIN `user` u ON u.`id_user` = pf.`id_user`
        WHERE pf.id_user = #{idUser,jdbcType=INTEGER}
        <if test="paymentForm != null">
            <if test="paymentForm.code != null and paymentForm.code != ''">
                AND pf.`code` LIKE CONCAT('%',#{paymentForm.code,jdbcType=VARCHAR},'%')
            </if>
            <if test="paymentForm.idPaymentFormState != null">
                and pf.`id_payment_form_state` = #{paymentForm.idPaymentFormState,jdbcType=INTEGER}
            </if>
        </if>
        ORDER BY pf.`create_time` DESC
        <if test="pageSize > 0">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>
</mapper>